"Indicates what fields are available at the top level of a query operation."
type Query @guard {
    "Find a single user by an identifying attribute."
    user(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

        "Search by email address."
        email: String
            @eq
            @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    "Find a single company by an identifying attribute."
    company(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:name", "required_without:name"])
        "Search by company name."
        name: String @eq @rules(apply: ["prohibits:id", "required_without:id"])
    ): Company @find

    "List multiple companies."
    companies(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
    ): [Company!]! @paginate(defaultCount: 10)
}

"Account of a person who uses this application."
type User {
    "Unique primary key."
    id: ID!

    "The company this user belongs to."
    company: Company @belongsTo

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Company {
    "Unique primary key."
    id: ID!

    "Company name."
    name: String!

    "When the company was created."
    created_at: DateTime!

    "When the company was last updated."
    updated_at: DateTime!
}
