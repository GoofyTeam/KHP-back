type Company {
    "Unique primary key."
    id: ID!

    "Company name."
    name: String!

    "Preparations associated with this company."
    preparations: [Preparation!]! @hasMany

    categories: [Category!]! @hasMany

    locations: [Location!]! @hasMany

    "Types de localisation associés à cette entreprise."
    locationTypes: [LocationType!]! @hasMany

    "Option pour activer ou désactiver la complétion automatique des commandes de menu."
    auto_complete_menu_orders: Boolean

    "Langue préférée pour les données OpenFoodFacts (fr ou en)."
    open_food_facts_language: String

    "Paramètres visibles publiquement pour la carte des menus."
    public_menu_settings: PublicMenuSettings!

    "When the company was created."
    created_at: DateTime!

    "When the company was last updated."
    updated_at: DateTime!
}

extend type Query @guard {
    "Find a single company by an identifying attribute."
    company(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:name", "required_without:name"])
        "Search by company name."
        name: String @eq @rules(apply: ["prohibits:id", "required_without:id"])
    ): Company @find

    "List multiple companies."
    companies(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
        "Options de tri des résultats."
        orderBy: [CompanyOrderByOrderByClause!] @orderBy
    ): [Company!]! @paginate(defaultCount: 10)
}

"Options de tri pour les entreprises."
input CompanyOrderByOrderByClause {
    "Champ sur lequel effectuer le tri."
    field: CompanyOrderByField!

    "Direction du tri."
    order: SortOrder!
}

"Champs disponibles pour le tri des entreprises."
enum CompanyOrderByField {
    ID @enum(value: "id")
    NAME @enum(value: "name")
    CREATED_AT @enum(value: "created_at")
    UPDATED_AT @enum(value: "updated_at")
}

type PublicMenuSettings {
    "Identifiant public unique pour partager la carte du restaurant."
    public_menu_card_url: String!

    "Affiche aussi les menus qui n'ont pas assez de stock sur la carte publique."
    show_out_of_stock_menus_on_card: Boolean!

    "Affiche les images des menus sur la carte publique."
    show_menu_images: Boolean!
}
