"""
Représente une perte d'ingrédient ou de préparation.
"""
type Loss {
    "Identifiant unique."
    id: ID!

    "Type d'entité concernée par cette perte (ingredient ou preparation)."
    loss_item_type: String!

    "ID de l'entité concernée."
    loss_item_id: ID!

    "L'emplacement où la perte a eu lieu."
    location: Location! @belongsTo

    "L'entreprise à laquelle appartient cette perte."
    company: Company! @belongsTo

    "L'utilisateur qui a enregistré la perte."
    user: User @belongsTo

    "Quantité perdue."
    quantity: Float!

    "Raison de la perte."
    reason: String

    "Date et heure de création de la perte."
    created_at: DateTime!

    "Date et heure de dernière mise à jour de la perte."
    updated_at: DateTime!
}

"""
Statistiques des pertes par type.
"""
type LossesStats {
    ingredient: Float!
    preparation: Float!
    total: Float!
}

extend type Query @guard {
    "Liste les pertes pour l'entreprise actuelle."
    losses(
        loss_item_type: String @eq(key: "loss_item_type")
        loss_item_id: ID @eq(key: "loss_item_id")
        location_id: ID @eq
        start_date: DateTime @where(operator: ">=", key: "created_at")
        end_date: DateTime @where(operator: "<=", key: "created_at")
        orderBy: [LossOrderByClause!] @orderBy
    ): [Loss!]! @paginate(defaultCount: 10, scopes: ["forCompany"])

    lossesStats(start_date: DateTime, end_date: DateTime): LossesStats!
        @field(resolver: "App\\GraphQL\\Resolvers\\LossesResolver@stats")
}

input LossOrderByClause {
    field: LossOrderByField!
    order: SortOrder!
}

enum LossOrderByField {
    ID @enum(value: "id")
    QUANTITY @enum(value: "quantity")
    CREATED_AT @enum(value: "created_at")
    UPDATED_AT @enum(value: "updated_at")
}
