extend type Query @guard {
    "Statistiques des mouvements de stock pour une période donnée"
    stockStatistics(
        "Date de début de la période (obligatoire)"
        startDate: DateTime! @rules(apply: ["required"])

        "Date de fin de la période (obligatoire)"
        endDate: DateTime! @rules(apply: ["required"])

        "ID de l'emplacement (facultatif)"
        locationId: ID

        "Type de mouvement (addition ou withdrawal)"
        type: String
    ): StockStatistics!
        @field(
            resolver: "App\\GraphQL\\Resolvers\\StockStatisticsResolver@getStatistics"
        )
}

"Statistiques des mouvements de stock"
type StockStatistics {
    "Nombre total de mouvements dans la période"
    totalMovements: Int!

    "Quantité totale ajoutée"
    totalAdditions: Float!

    "Quantité totale retirée"
    totalWithdrawals: Float!

    "Mouvements par jour"
    movementsByDay: [DailyMovement!]!

    "Top 5 des ingrédients les plus utilisés"
    topIngredients: [TopMovementItem!]!

    "Top 5 des préparations les plus utilisées"
    topPreparations: [TopMovementItem!]!
}

"Mouvement de stock pour un jour spécifique"
type DailyMovement {
    "Date du jour"
    date: Date!

    "Nombre de mouvements"
    count: Int!

    "Quantité totale ajoutée"
    additions: Float!

    "Quantité totale retirée"
    withdrawals: Float!
}

"Item dans le top des mouvements"
type TopMovementItem {
    "ID de l'entité"
    id: ID!

    "Nom de l'entité"
    name: String!

    "Type d'entité (ingredient ou preparation)"
    type: String!

    "Quantité totale concernée"
    totalQuantity: Float!

    "Nombre de mouvements"
    movementCount: Int!
}
