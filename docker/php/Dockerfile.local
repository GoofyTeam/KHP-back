FROM shinsenter/frankenphp:php8.4-alpine

ENV SERVER_NAME="http://"

# Installation des d√©pendances avec apk (gestionnaire de paquets Alpine)
RUN apk add --no-cache \
    git \
    unzip \
    rabbitmq-c-dev \
    postgresql-dev \
    supervisor \
    curl \
    gnupg \
    icu-dev

# Installation de Node.js avec apk
RUN apk add --no-cache nodejs npm \
    && npm install -g npm@latest

RUN node --version && npm --version

RUN wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/local/bin/mc && \
    chmod +x /usr/local/bin/mc

# Installation des extensions PHP
RUN install-php-extensions \
    gd \
    pcntl \
    opcache \
    pdo \
    pdo_pgsql \
    redis \
    intl

COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

WORKDIR /var/www/html

COPY . .

COPY ./docker/php/php.ini /usr/local/etc/php/
COPY ./docker/etc/supervisor.d/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Installation de Xdebug
RUN apk add --no-cache $PHPIZE_DEPS linux-headers \
    && pecl install xdebug \
    && docker-php-ext-enable xdebug

RUN composer install --no-interaction --prefer-dist --optimize-autoloader

RUN npm install

RUN chown -R www-data:www-data storage bootstrap/cache

EXPOSE 80 443

COPY ./docker/php/entrypoint.sh /usr/local/bin/entrypoint.sh

RUN chmod +x /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
