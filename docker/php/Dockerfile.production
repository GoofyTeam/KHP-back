FROM shinsenter/frankenphp:php8.4-alpine AS builder

# Pour activer HTTPS en production
ENV SERVER_NAME="https://"

# Installer les dépendances système
RUN apk add --no-cache \
    git \
    unzip \
    rabbitmq-c-dev \
    postgresql-dev \
    supervisor \
    curl \
    gnupg \
    icu-dev \
    make

RUN apk add --no-cache nodejs npm \
    && npm install -g npm@latest

RUN node --version && npm --version

RUN wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/local/bin/mc && \
    chmod +x /usr/local/bin/mc

# Installer les extensions PHP nécessaires
RUN install-php-extensions \
    gd pcntl opcache pdo pdo_pgsql redis intl

# Récupérer Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

WORKDIR /var/www/html

# Copier composer.json et composer.lock d'abord pour utiliser le cache des couches
COPY composer.json composer.lock ./
RUN composer install --no-dev --no-scripts --no-autoloader

# Copier le reste du code
COPY . .

# Installer les dépendances, optimiser l'autoloader
RUN composer install --no-dev --optimize-autoloader \
    && php artisan config:cache \
    && php artisan route:cache \
    && php artisan view:cache \
    && chown -R www-data:www-data storage bootstrap/cache

# Configuration de PHP pour la production
COPY ./docker/php/php.ini.production /usr/local/etc/php/php.ini
COPY ./docker/etc/supervisor.d/supervisord.prod.conf /etc/supervisor/conf.d/supervisord.conf

EXPOSE 80 443

COPY ./docker/php/entrypoint.prod.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
